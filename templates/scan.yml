# This template is used to generate a dependency scanning report.
# Report format is JSON.
#
# Input Sepcification
# Docs: https://docs.gitlab.com/ci/yaml/#spec
spec:
  inputs:
    # vet specific inputs
    policy:
      description: 'Path to policy file, default policy will be used when not given'
      type: string 
      default: '.gitlab/vet/policy.yml' # For now we don't want to use a default policy, since we are using sarif then sarif-converter which will use the default policy
      # later when we have our own gitlab-specific-report, then we can make this default to '.gitlab/vet/policy.yml', and optional
    version: 
      description: 'vet version to use for the scan. Defaults to using latest release'
      type: string
      default: latest
    cloud:
      description: 'Synchronize configuration, policy and report with SafeDep cloud'
      type: boolean
      default: false
    cloud-key:
      description: 'API key to use for synchronizing report with SafeDep cloud'
      type: string
      default: ''
    cloud-tenant:
      description: 'Tenant ID to use for synchronizing report with SafeDep cloud'
      type: string
      default: ''
    exception-file:
      description: 'Path to exception file'
      type: string
      default: '.gitlab/vet/exceptions.yml'
    trusted-registries:
      description: 'Comma separated list of trusted registry base URLs'
      type: array
      default: []
    timeout:
      description: 'Timeout in seconds for vet to wait for external service results to be available. For malicious package analysis, this set the maximum time to wait for the analysis results to be available.'
      type: number
      default: 300

    # gitlab specific inputs
    stage:
      description: 'The stage where you want the job to be added'
      default: test
    artifact_access:
      description: 'artifact_access to determine who can access the job artifacts from the GitLab UI or API'
      type: string
      options: 
        - 'all'
        - 'developer'
        - 'none'
      default: 'developer'
    allow_failure: # Allowing a job to fail without stopping the pipeline.
      description: 'Whether the scanning job is allowed to fail' 
      type: boolean
      default: true
---

vet_dependency_scanning:
  stage: $[[ inputs.stage ]]
  allow_failure: $[[ inputs.allow_failure ]]
  image: 
    name: ghcr.io/safedep/vet:$[[ inputs.version ]]
    entrypoint: [""] # by default vet's docker entrypoint is ["vet"] but we want to it as environment  / shell, so we override it to empty allowsing gitlab to work with it
  before_script:
    # Download sarif-converter for converting sarif report to gitlab specific dependency scanning report
    # - wget -O sarif-converter https://gitlab.com/ignis-build/sarif-converter/-/releases/permalink/latest/downloads/bin/sarif-converter-linux
    # - chmod +x sarif-converter
  variables:
    ARTIFACT_FILENAME: "gl-dependency-scanning-report.json"
  script:
    - vet version
  artifacts:
    access: $[[ inputs.artifact_access ]]
    reports: # This is required for Security Scanning
      dependency_scanning: $ARTIFACT_FILENAME
    expire_in: 1 week
